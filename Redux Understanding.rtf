{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh16280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs70 \cf0 // Iteration 1\
const reducer = () => [];\
const store = Redux.createStore(reducer);\
\
store.getState();\
\
// Iteration 2\
const reducer = (state = [], action) => \{\
  if (action.type === 'split_string') \{\
    return action.payload.split('');\
  \}\
  return state;\
\};\
const store = Redux.createStore(reducer);\
\
store.getState();\
\
const action = \{ \
  type: 'split_string', \
  payload: 'asdf'\
\};\
\
store.dispatch(action);\
\
store.getState();\
\
// Iteration 3\
const reducer = (state = [], action) => \{\
  if (action.type === 'split_string') \{\
    return action.payload.split('');\
  \} else if (action.type === 'add_character') \{\
    state.push(action.payload);\
    return state;\
  \}\
  return state;\
\};\
const store = Redux.createStore(reducer);\
\
store.getState();\
\
const action = \{ \
  type: 'split_string', \
  payload: 'asdf'\
\};\
\
store.dispatch(action);\
\
store.getState();\
\
const action2 = \{\
  type: 'add_character',\
  payload: 'a'\
\};\
\
store.dispatch(action2);\
store.getState();\
\
// Iteration 4\
const reducer = (state = [], action) => \{\
  if (action.type === 'split_string') \{\
    return action.payload.split('');\
  \} else if (action.type === 'add_character') \{\
    return [...state, action.payload];\
  \}\
  return state;\
\};\
const store = Redux.createStore(reducer);\
\
store.getState();\
\
const action = \{ \
  type: 'split_string', \
  payload: 'asdf'\
\};\
\
store.dispatch(action);\
\
store.getState();\
\
const action2 = \{\
  type: 'add_character',\
  payload: 'a'\
\};\
\
store.dispatch(action2);\
store.getState();\
}